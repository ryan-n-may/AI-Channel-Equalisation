%% INITIAL LSTM TRAINING
%CreateLSTM;
%CreateTrainingData;
%CreateValidationData;
load("LSTMTRAININGDATA.mat", "LSTM_INPUT", "CHANNEL_H");
load("LSTMVALIDATIONDATA.mat", "LSTM_VALID_INPUT", "CHANNEL_VALID_H");
ValidationData = {LSTM_VALID_INPUT, CHANNEL_VALID_H};
%load("TrainedEstimator.mat", "lstm");
%% LSTM Configuration
InputUnits = 128;
HiddenUnits = 1000;
MiddleUnits = 1000;
OutputUnits = 64;
MaxEpochs = 100;
MiniBatchSize = 128;
InitialLearningRate = 0.001;
LearningRateDropPeriod = 50;
LearningRateDropFactor = 0.9;
Regularisation = 0.001;
%% Creating LSTM
lstm = LSTM;
lstm = lstm.GenerateLSTM(...
                InputUnits, ...
                HiddenUnits, ...
                MiddleUnits, ...
                OutputUnits, ...
                MaxEpochs, ...
                MiniBatchSize, ...
                InitialLearningRate, ...
                LearningRateDropPeriod, ...
                LearningRateDropFactor, ...
                Regularisation, ...
                ValidationData ...
                );
lstm = lstm.Mute();
[lstm, LSTMnet] = lstm.TrainLSTM(LSTM_INPUT, CHANNEL_H, false, NaN);
%save("TrainedEstimator.mat", "LSTMnet", "lstm");
